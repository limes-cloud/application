syntax = "proto3";

package user;

option go_package = "./v1;v1";

import "validate/validate.proto";

message AuthReply{
  uint32 user_id = 1;
  uint32 app_id = 2;
  string app_keyword = 3;
  uint32 channel_id = 4;
}

message AllLoginPlatformReply{
  message Platform{
    string platform = 1;
    string name = 2;
  }
  repeated Platform list = 1;
}

message OAuthLoginRequest {
  string app = 1[(validate.rules).string = {min_len:1}];
  string code = 2[(validate.rules).string = {min_len:1}];
  string platform = 3[(validate.rules).string = {min_len:1}];
}

message OAuthBindEmailCaptchaRequest{
  string email = 1[(validate.rules).string = {email:true}];
}

message PasswordLoginRequest {
  string username = 1[(validate.rules).string = {min_len:1}];
  string password = 2[(validate.rules).string = {min_len:1}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captcha_id = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
}

message PasswordRegisterCheckRequest {
  string username = 1[(validate.rules).string = {min_len:1}];
}

message PasswordRegisterCheckReply {
  bool allow = 1;
}

message OAuthBindByPasswordRequest {
  string username = 1[(validate.rules).string = {min_len:6}];
  string password = 2[(validate.rules).string = {min_len:1}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captcha_id = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
  string code = 6[(validate.rules).string = {min_len:1}];
  string platform = 7[(validate.rules).string = {min_len:1}];
}

message BindReply{
  string token = 1;
}

message PasswordRegisterRequest {
  string username = 1[(validate.rules).string = {min_len:6}];
  string password = 2[(validate.rules).string = {min_len:1}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captcha_id = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
}

message RegisterReply{
  uint32 id = 1;
  string token = 2;
}

message LoginReply {
  string token = 1;
}

message CaptchaReply {
  string id = 1;
  uint32 expire = 2;
  string base64 = 3;
}



message OAuthBindByCaptchaRequest {
  string username = 1[(validate.rules).string = {min_len:1}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captcha_id = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
  string code = 6[(validate.rules).string = {min_len:1}];
  string platform = 7[(validate.rules).string = {min_len:1}];
}

message CaptchaLoginRequest {
  string username = 1[(validate.rules).string = {min_len:1}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captcha_id = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
}

message CaptchaRegisterRequest {
  string username = 1[(validate.rules).string = {min_len:1}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captcha_id = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
}

message CaptchaLoginEmailRequest{
  string email = 1[(validate.rules).string = {email:true}];
}

message CaptchaRegisterEmailRequest{
  string email = 1[(validate.rules).string = {email:true}];
}

message ParseTokenReply{
  uint32 user_id = 1;
  uint32 app_id = 2;
  uint32 channel_id = 3;
  string app_keyword = 4;
}