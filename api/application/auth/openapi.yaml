# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Auth API
    version: 0.0.1
paths:
    /application/api/v1/auth:
        post:
            tags:
                - Auth
            description: CreateAuth 创建应用授权信息
            operationId: Auth_CreateAuth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAuthReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Auth
            description: DeleteAuth 删除应用授权信息
            operationId: Auth_DeleteAuth
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: appId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteAuthReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/api/v1/auth/status:
        put:
            tags:
                - Auth
            description: UpdateAuthStatus 更新应用授权信息状态
            operationId: Auth_UpdateAuthStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAuthStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAuthStatusReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/api/v1/auths:
        get:
            tags:
                - Auth
            description: ListAuth 获取应用授权信息列表
            operationId: Auth_ListAuth
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: order
                  in: query
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  schema:
                    type: string
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAuthReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/api/v1/oauth:
        delete:
            tags:
                - Auth
            description: DeleteOAuth 删除渠道授权信息
            operationId: Auth_DeleteOAuth
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: channelId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteOAuthReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/api/v1/oauths:
        get:
            tags:
                - Auth
            description: ListOAuth 获取用户授权渠道信息列表
            operationId: Auth_ListOAuth
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: order
                  in: query
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  schema:
                    type: string
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOAuthReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/auth:
        post:
            tags:
                - Auth
            description: 解析token信息
            operationId: Auth_Auth
            requestBody:
                content:
                    application/json: {}
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/auth/captcha:
        post:
            tags:
                - Auth
            description: GenAuthCaptcha 生成二维码
            operationId: Auth_GenAuthCaptcha
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenAuthCaptchaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenAuthCaptchaReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/bind/email:
        post:
            tags:
                - Auth
            description: EmailBind 邮箱绑定
            operationId: Auth_EmailBind
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmailBindRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/bind/password:
        post:
            tags:
                - Auth
            description: PasswordBind 密码绑定
            operationId: Auth_PasswordBind
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PasswordBindRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PasswordBindReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/login/email:
        post:
            tags:
                - Auth
            description: EmailLogin 邮箱登陆
            operationId: Auth_EmailLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmailLoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailLoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/login/oauth:
        post:
            tags:
                - Auth
            description: OAuthLogin 三方渠道登陆
            operationId: Auth_OAuthLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OAuthLoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OAuthLoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/login/password:
        post:
            tags:
                - Auth
            description: PasswordLogin 密码登陆
            operationId: Auth_PasswordLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PasswordLoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PasswordLoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/logout:
        post:
            tags:
                - Auth
            description: 退出登陆
            operationId: Auth_Logout
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/register/email:
        post:
            tags:
                - Auth
            description: EmailRegister 邮箱注册
            operationId: Auth_EmailRegister
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmailRegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailRegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/register/password:
        post:
            tags:
                - Auth
            description: PasswordRegister 密码注册
            operationId: Auth_PasswordRegister
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PasswordRegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PasswordRegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /application/client/v1/token/refresh:
        post:
            tags:
                - Auth
            description: 刷新token时长
            operationId: Auth_RefreshToken
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AuthReply:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint32
                appKeyword:
                    type: string
        CreateAuthReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        CreateAuthRequest:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint32
                appId:
                    type: integer
                    format: uint32
        DeleteAuthReply:
            type: object
            properties: {}
        DeleteOAuthReply:
            type: object
            properties: {}
        EmailBindReply:
            type: object
            properties:
                token:
                    type: string
                expire:
                    type: integer
                    format: uint32
        EmailBindRequest:
            type: object
            properties:
                email:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
                oAuthUid:
                    type: string
        EmailLoginReply:
            type: object
            properties:
                token:
                    type: string
                expire:
                    type: integer
                    format: uint32
        EmailLoginRequest:
            type: object
            properties:
                email:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
        EmailRegisterReply:
            type: object
            properties:
                token:
                    type: string
                expire:
                    type: integer
                    format: uint32
        EmailRegisterRequest:
            type: object
            properties:
                email:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
                oAuthUid:
                    type: string
        GenAuthCaptchaReply:
            type: object
            properties:
                id:
                    type: string
                expire:
                    type: integer
                    format: uint32
                base64:
                    type: string
        GenAuthCaptchaRequest:
            type: object
            properties:
                type:
                    type: string
                email:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListAuthReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListAuthReply_Auth'
        ListAuthReply_App:
            type: object
            properties:
                logo:
                    type: string
                keyword:
                    type: string
                name:
                    type: string
        ListAuthReply_Auth:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                appId:
                    type: integer
                    format: uint32
                status:
                    type: boolean
                disableDesc:
                    type: string
                loggedAt:
                    type: integer
                    format: uint32
                expiredAt:
                    type: integer
                    format: uint32
                createdAt:
                    type: integer
                    format: uint32
                app:
                    $ref: '#/components/schemas/ListAuthReply_App'
        ListOAuthReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListOAuthReply_OAuth'
        ListOAuthReply_Channel:
            type: object
            properties:
                logo:
                    type: string
                keyword:
                    type: string
                name:
                    type: string
        ListOAuthReply_OAuth:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                channelId:
                    type: integer
                    format: uint32
                status:
                    type: boolean
                disableDesc:
                    type: string
                loggedAt:
                    type: integer
                    format: uint32
                expiredAt:
                    type: integer
                    format: uint32
                createdAt:
                    type: integer
                    format: uint32
                channel:
                    $ref: '#/components/schemas/ListOAuthReply_Channel'
        LogoutReply:
            type: object
            properties: {}
        OAuthLoginReply:
            type: object
            properties:
                isBind:
                    type: boolean
                oAuthUid:
                    type: string
                token:
                    type: string
                expire:
                    type: integer
                    format: uint32
        OAuthLoginRequest:
            type: object
            properties:
                app:
                    type: string
                code:
                    type: string
                channel:
                    type: string
        PasswordBindReply:
            type: object
            properties:
                token:
                    type: string
                expire:
                    type: integer
                    format: uint32
        PasswordBindRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
                oAuthUid:
                    type: string
        PasswordLoginReply:
            type: object
            properties:
                token:
                    type: string
                expire:
                    type: integer
                    format: uint32
        PasswordLoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
        PasswordRegisterReply:
            type: object
            properties:
                token:
                    type: string
                expire:
                    type: integer
                    format: uint32
        PasswordRegisterRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
                oAuthUid:
                    type: string
        RefreshTokenReply:
            type: object
            properties:
                token:
                    type: string
                expire:
                    type: integer
                    format: uint32
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateAuthStatusReply:
            type: object
            properties: {}
        UpdateAuthStatusRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                status:
                    type: boolean
                disableDesc:
                    type: string
tags:
    - name: Auth
