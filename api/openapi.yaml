# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Service API
    version: 0.0.1
paths:
    /user-center/v1/user:
        get:
            tags:
                - Service
            operationId: Service_GetUser
            parameters:
                - name: phone
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteUser
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/v1/user/disable:
        post:
            tags:
                - Service
            description: DisableUser 禁用用户
            operationId: Service_DisableUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DisableUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/v1/user/enable:
        post:
            tags:
                - Service
            description: DisableUser 禁用用户
            operationId: Service_EnableUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EnableUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/v1/user/offline:
        post:
            tags:
                - Service
            description: DisableUser 禁用用户
            operationId: Service_OfflineUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OfflineUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/v1/users:
        get:
            tags:
                - Service
            operationId: Service_PageUser
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: app
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
                - name: phone
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
                - name: idCard
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_ImportUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ImportUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AddUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        AddUserRequest:
            type: object
            properties:
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                idCard:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
                userApps:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserApp'
                userExtras:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserExtra'
        DisableUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                desc:
                    type: string
        EnableUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ImportUserRequest:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ImportUserRequest_ImportData'
        ImportUserRequest_ImportData:
            type: object
            properties:
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                idCard:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
                userApps:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserApp'
                userExtras:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserExtra'
        OfflineUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        PageUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                idCard:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                idCard:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
                status:
                    type: boolean
                disableDesc:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                userApps:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserApp'
                userExtras:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserExtra'
        UserApp:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint32
                app:
                    type: string
                status:
                    type: boolean
                lastLogin:
                    type: string
                token:
                    type: string
                expiredAt:
                    type: integer
                    format: uint32
        UserExtra:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                userId:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                type:
                    type: string
                value:
                    $ref: '#/components/schemas/GoogleProtobufAny'
                createdAt:
                    type: integer
                    format: uint32
tags:
    - name: Service
