# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Service API
    version: 0.0.1
paths:
    /user-center/admin/v1/agreement:
        get:
            tags:
                - Service
            operationId: Service_GetAgreement
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Agreement'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_UpdateAgreement
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAgreementRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddAgreement
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddAgreementRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddAgreementReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteAgreement
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/agreements:
        get:
            tags:
                - Service
            operationId: Service_PageAgreement
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageAgreementReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/app:
        get:
            tags:
                - Service
            operationId: Service_GetAppByKeyword
            parameters:
                - name: keyword
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/App'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_UpdateApp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddApp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddAppReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteApp
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/apps:
        get:
            tags:
                - Service
            operationId: Service_PageApp
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: keyword
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageAppReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/channel:
        put:
            tags:
                - Service
            operationId: Service_UpdateChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddChannelReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteChannel
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/channels:
        get:
            tags:
                - Service
            operationId: Service_AllChannel
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AllChannelReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/extra-field:
        put:
            tags:
                - Service
            operationId: Service_UpdateExtraField
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateExtraFieldRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddExtraField
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddExtraFieldRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddExtraFieldReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteExtraField
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/extra-field/types:
        get:
            tags:
                - Service
            operationId: Service_AllExtraFieldType
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AllExtraFieldTypeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/extra-fields:
        get:
            tags:
                - Service
            operationId: Service_PageExtraField
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: keyword
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageExtraFieldReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/login/platforms:
        get:
            tags:
                - Service
            operationId: Service_AllLoginPlatform
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AllLoginPlatformReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/scene:
        get:
            tags:
                - Service
            operationId: Service_GetSceneByKeyword
            parameters:
                - name: keyword
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Scene'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_UpdateScene
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSceneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddScene
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddSceneRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddSceneReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteScene
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/scenes:
        get:
            tags:
                - Service
            operationId: Service_PageScene
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageSceneReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/user:
        get:
            tags:
                - Service
            operationId: Service_GetUser
            parameters:
                - name: phone
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: idCard
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Service
            operationId: Service_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            operationId: Service_AddUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteUser
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/user/app:
        post:
            tags:
                - Service
            operationId: Service_AddUserApp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddUserAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            operationId: Service_DeleteUserApp
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: appId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/user/disable:
        post:
            tags:
                - Service
            description: DisableUser 禁用用户
            operationId: Service_DisableUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DisableUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/user/enable:
        post:
            tags:
                - Service
            description: DisableUser 禁用用户
            operationId: Service_EnableUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EnableUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/user/offline:
        post:
            tags:
                - Service
            description: DisableUser 禁用用户
            operationId: Service_OfflineUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OfflineUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/admin/v1/users:
        get:
            tags:
                - Service
            operationId: Service_PageUser
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: app
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
                - name: phone
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
                - name: idCard
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/agreement:
        get:
            tags:
                - Service
            operationId: Service_GetAgreement
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Agreement'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/app:
        get:
            tags:
                - Service
            operationId: Service_GetAppByKeyword
            parameters:
                - name: keyword
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/App'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/auth:
        post:
            tags:
                - Service
            operationId: Service_Auth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/bind/email:
        post:
            tags:
                - Service
            operationId: Service_BindByEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BindByEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/bind/email-captcha:
        post:
            tags:
                - Service
            operationId: Service_BindEmailCaptcha
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BindEmailCaptchaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailCaptchaReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/bind/image-captcha:
        get:
            tags:
                - Service
            operationId: Service_BindImageCaptcha
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ImageCaptchaReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/bind/password:
        get:
            tags:
                - Service
            operationId: Service_BindByPassword
            parameters:
                - name: username
                  in: query
                  schema:
                    type: string
                - name: password
                  in: query
                  schema:
                    type: string
                - name: captcha
                  in: query
                  schema:
                    type: string
                - name: captchaId
                  in: query
                  schema:
                    type: string
                - name: app
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/login/email:
        post:
            tags:
                - Service
            operationId: Service_LoginByEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginByEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/login/email-captcha:
        post:
            tags:
                - Service
            operationId: Service_LoginEmailCaptcha
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginEmailCaptchaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailCaptchaReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/login/image-captcha:
        get:
            tags:
                - Service
            operationId: Service_LoginImageCaptcha
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ImageCaptchaReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/login/password:
        post:
            tags:
                - Service
            operationId: Service_LoginByPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginByPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/register/email:
        post:
            tags:
                - Service
            operationId: Service_RegisterByEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterByEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/register/email-captcha:
        post:
            tags:
                - Service
            operationId: Service_RegisterEmailCaptcha
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterEmailCaptchaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailCaptchaReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/register/image-captcha:
        get:
            tags:
                - Service
            operationId: Service_RegisterImageCaptcha
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ImageCaptchaReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/register/password:
        post:
            tags:
                - Service
            operationId: Service_RegisterByPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterByPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/register/username/check:
        get:
            tags:
                - Service
            operationId: Service_RegisterUsernameCheck
            parameters:
                - name: username
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterUsernameCheckReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/scene:
        get:
            tags:
                - Service
            operationId: Service_GetSceneByKeyword
            parameters:
                - name: keyword
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Scene'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user-center/client/v1/user:
        get:
            tags:
                - Service
            operationId: Service_GetCurrentUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AddAgreementReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        AddAgreementRequest:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: boolean
                content:
                    type: string
                description:
                    type: string
        AddAppReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        AddAppRequest:
            type: object
            properties:
                keyword:
                    type: string
                logo:
                    type: string
                name:
                    type: string
                description:
                    type: string
                status:
                    type: boolean
                allowRegistry:
                    type: boolean
                channelIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
        AddChannelReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        AddChannelRequest:
            type: object
            properties:
                logo:
                    type: string
                platform:
                    type: string
                name:
                    type: string
                ak:
                    type: string
                sk:
                    type: string
                extra:
                    type: string
                status:
                    type: boolean
        AddExtraFieldReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        AddExtraFieldRequest:
            type: object
            properties:
                keyword:
                    type: string
                type:
                    type: string
                name:
                    type: string
                description:
                    type: string
        AddSceneReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        AddSceneRequest:
            type: object
            properties:
                keyword:
                    type: string
                name:
                    type: string
                description:
                    type: string
                agreementIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
        AddUserAppRequest:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint32
                appId:
                    type: integer
                    format: uint32
        AddUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        AddUserRequest:
            type: object
            properties:
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                idCard:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
                from:
                    type: string
                fromDesc:
                    type: string
                userExtras:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserExtra'
        Agreement:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                status:
                    type: boolean
                content:
                    type: string
                description:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        AllChannelReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Channel'
        AllExtraFieldTypeReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/AllExtraFieldTypeReply_data'
        AllExtraFieldTypeReply_data:
            type: object
            properties:
                type:
                    type: string
                name:
                    type: string
        AllLoginPlatformReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/AllLoginPlatformReply_Platform'
        AllLoginPlatformReply_Platform:
            type: object
            properties:
                platform:
                    type: string
                name:
                    type: string
        App:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                logo:
                    type: string
                name:
                    type: string
                status:
                    type: boolean
                allowRegistry:
                    type: boolean
                description:
                    type: string
                channels:
                    type: array
                    items:
                        $ref: '#/components/schemas/OuterChannel'
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                resource:
                    $ref: '#/components/schemas/File'
        AuthRequest:
            type: object
            properties:
                appId:
                    type: integer
                    format: uint32
        BindByEmailRequest:
            type: object
            properties:
                email:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
        BindEmailCaptchaRequest:
            type: object
            properties:
                email:
                    type: string
        Channel:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                logo:
                    type: string
                platform:
                    type: string
                name:
                    type: string
                ak:
                    type: string
                sk:
                    type: string
                extra:
                    type: string
                status:
                    type: boolean
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                resource:
                    $ref: '#/components/schemas/File'
        DisableUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                desc:
                    type: string
        EmailCaptchaReply:
            type: object
            properties:
                id:
                    type: string
                expire:
                    type: integer
                    format: uint32
        EnableUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        ExtraField:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                type:
                    type: string
                name:
                    type: string
                description:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        File:
            type: object
            properties: {}
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        GoogleProtobufValue:
            description: Represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values.
        ImageCaptchaReply:
            type: object
            properties:
                id:
                    type: string
                expire:
                    type: integer
                    format: uint32
                base64:
                    type: string
        LoginByEmailRequest:
            type: object
            properties:
                email:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
        LoginByPasswordRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
        LoginEmailCaptchaRequest:
            type: object
            properties:
                email:
                    type: string
        LoginReply:
            type: object
            properties:
                token:
                    type: string
        OfflineUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        OuterChannel:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                platform:
                    type: string
                name:
                    type: string
                logo:
                    type: string
        PageAgreementReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Agreement'
        PageAppReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/App'
        PageExtraFieldReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExtraField'
        PageSceneReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Scene'
        PageUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
        RegisterByEmailRequest:
            type: object
            properties:
                email:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
        RegisterByPasswordRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                captcha:
                    type: string
                captchaId:
                    type: string
                app:
                    type: string
        RegisterEmailCaptchaRequest:
            type: object
            properties:
                email:
                    type: string
        RegisterReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                token:
                    type: string
        RegisterUsernameCheckReply:
            type: object
            properties:
                allow:
                    type: boolean
        Scene:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                name:
                    type: string
                description:
                    type: string
                agreements:
                    type: array
                    items:
                        $ref: '#/components/schemas/Scene_Agreement'
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        Scene_Agreement:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateAgreementRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                status:
                    type: boolean
                content:
                    type: string
                description:
                    type: string
        UpdateAppRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                logo:
                    type: string
                name:
                    type: string
                description:
                    type: string
                status:
                    type: boolean
                allowRegistry:
                    type: boolean
                channelIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
        UpdateChannelRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                logo:
                    type: string
                platform:
                    type: string
                name:
                    type: string
                ak:
                    type: string
                sk:
                    type: string
                extra:
                    type: string
                status:
                    type: boolean
        UpdateExtraFieldRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                type:
                    type: string
                name:
                    type: string
                description:
                    type: string
        UpdateSceneRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                name:
                    type: string
                description:
                    type: string
                agreementIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
        UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                idCard:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                idCard:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
                status:
                    type: boolean
                disableDesc:
                    type: string
                from:
                    type: string
                fromDesc:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                apps:
                    type: array
                    items:
                        $ref: '#/components/schemas/User_App'
                channels:
                    type: array
                    items:
                        $ref: '#/components/schemas/User_Channel'
                extra:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/GoogleProtobufValue'
                extraList:
                    type: array
                    items:
                        $ref: '#/components/schemas/User_Extra'
        UserExtra:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                userId:
                    type: integer
                    format: uint32
                keyword:
                    type: string
                type:
                    type: string
                value:
                    $ref: '#/components/schemas/GoogleProtobufAny'
                createdAt:
                    type: integer
                    format: uint32
        User_App:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                logo:
                    type: string
                registryAt:
                    type: integer
                    format: uint32
                loginAt:
                    type: integer
                    format: uint32
                resource:
                    $ref: '#/components/schemas/File'
        User_Channel:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                logo:
                    type: string
                authAt:
                    type: integer
                    format: uint32
                loginAt:
                    type: integer
                    format: uint32
                resource:
                    $ref: '#/components/schemas/File'
        User_Extra:
            type: object
            properties:
                name:
                    type: string
                keyword:
                    type: string
                type:
                    type: string
                typeName:
                    type: string
                value:
                    $ref: '#/components/schemas/GoogleProtobufValue'
tags:
    - name: Service
