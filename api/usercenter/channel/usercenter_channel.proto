syntax = "proto3";

package usercenter.api.usercenter.channel.v1;

option go_package = "./v1;v1";
option java_multiple_files = true;
option java_package = "usercenter.api.usercenter.channel.v1";
option java_outer_classname = "ChannelV1";

import "validate/validate.proto";

message ListChannelTypeRequest{}

message ListChannelTypeReply{
  message Type{
    string keyword = 1;
    string name = 2;
  }
  repeated Type list = 1;
}

message ListChannelRequest {
  uint32 page = 1[(validate.rules).uint32 = {gt: 0}];
  uint32 pageSize = 2[(validate.rules).uint32 = {gt: 0,lte:50}];
  optional string order = 3[(validate.rules).string = {in: ["asc","desc"]}];
  optional string orderBy = 4[(validate.rules).string = {in: ["id","created_at"]}];
  optional string keyword = 5;
  optional string name = 6;
  optional bool status = 7;
}

message ListChannelReply {
  message Channel {
    uint32 id = 1;
    string logo = 2;
    string logoUrl = 3;
    string keyword = 4;
    string name = 5;
    optional bool status = 6;
    optional string ak = 7;
    optional string sk = 8;
    optional string extra = 9;
    uint32 createdAt = 10;
    uint32 updatedAt = 11;
  }

  uint32 total = 1;
  repeated Channel list = 2;
}

message CreateChannelRequest {
  string logo = 1[(validate.rules).string = {min_len: 1}];
  string keyword = 2[(validate.rules).string = {min_len: 1}];
  string name = 3[(validate.rules).string = {min_len: 1}];
  optional bool status = 4;
  optional string ak = 5;
  optional string sk = 6;
  optional string extra = 7;
}

message CreateChannelReply {
  uint32 id = 1;
}

message UpdateChannelRequest {
  uint32 id = 1[(validate.rules).uint32 = {gt: 0}];
  string logo = 2[(validate.rules).string = {min_len: 1}];
  string keyword = 3[(validate.rules).string = {min_len: 1}];
  string name = 4[(validate.rules).string = {min_len: 1}];
  optional string ak = 5;
  optional string sk = 6;
  optional string extra = 7;
}

message UpdateChannelReply {
}

message UpdateChannelStatusRequest {
  uint32 id = 1[(validate.rules).uint32 = {gt: 0}];
  bool status = 2;
}

message UpdateChannelStatusReply {
}

message DeleteChannelRequest {
  repeated uint32 ids = 1[(validate.rules).repeated = {min_items: 1, unique:true, max_items:50}];
}

message DeleteChannelReply {
  uint32 total = 1;
}

