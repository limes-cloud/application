syntax = "proto3";

package usercenter.api.usercenter.auth.v1;

option go_package = "./v1;v1";
option java_multiple_files = true;
option java_package = "usercenter.api.usercenter.auth.v1";
option java_outer_classname = "AuthV1";

import "validate/validate.proto";

message AuthReply{
  uint32 userId = 1;
  string appKeyword = 2;
}

message ListAuthRequest {
  uint32 page = 1[(validate.rules).uint32 = {gt: 0}];
  uint32 pageSize = 2[(validate.rules).uint32 = {gt: 0,lte:50}];
  optional string order = 3[(validate.rules).string = {in: ["asc","desc"]}];
  optional string orderBy = 4[(validate.rules).string = {in: ["id","created_at"]}];
  uint32 userId = 5[(validate.rules).uint32 = {gt: 0}];
}

message ListAuthReply {
  message App {
    string logo = 1;
    string keyword = 2;
    string name = 3;
  }
  message Auth {
    uint32 id = 1;
    uint32 appId = 2;
    optional bool status = 3;
    optional string disableDesc = 4;
    uint32 loggedAt = 5;
    uint32 expiredAt = 6;
    uint32 createdAt = 7;
    optional App app = 8;
  }

  uint32 total = 1;
  repeated Auth list = 2;
}

message CreateAuthRequest {
  uint32 userId = 1[(validate.rules).uint32 = {gt: 0}];
  uint32 appId = 2[(validate.rules).uint32 = {gt: 0}];
}

message CreateAuthReply {
  uint32 id = 1;
}

message UpdateAuthStatusRequest {
  uint32 id = 1[(validate.rules).uint32 = {gt: 0}];
  bool status = 2;
  optional string disableDesc = 3;
}

message UpdateAuthStatusReply {
}

message DeleteAuthRequest {
  uint32 userId = 1[(validate.rules).uint32 = {gt: 0}];
  uint32 appId = 2[(validate.rules).uint32 = {gt: 0}];
}

message DeleteAuthReply {
}


message ListOAuthRequest {
  uint32 page = 1[(validate.rules).uint32 = {gt: 0}];
  uint32 pageSize = 2[(validate.rules).uint32 = {gt: 0,lte:50}];
  optional string order = 3[(validate.rules).string = {in: ["asc","desc"]}];
  optional string orderBy = 4[(validate.rules).string = {in: ["id","created_at"]}];
  uint32 userId = 5[(validate.rules).uint32 = {gt: 0}];
}

message ListOAuthReply {
  message Channel {
    string logo = 1;
    string keyword = 2;
    string name = 3;
  }
  message OAuth {
    uint32 id = 1;
    uint32 channelId = 2;
    optional bool status = 3;
    optional string disableDesc = 4;
    uint32 loggedAt = 5;
    uint32 expiredAt = 6;
    uint32 createdAt = 7;
    optional Channel channel = 8;
  }

  uint32 total = 1;
  repeated OAuth list = 2;
}

message DeleteOAuthRequest {
  uint32 userId = 1[(validate.rules).uint32 = {gt: 0}];
  uint32 channelId = 2[(validate.rules).uint32 = {gt: 0}];
}

message DeleteOAuthReply {
}

message GenAuthCaptchaRequest{
  string type = 1[(validate.rules).string = {min_len:1}];
  string email = 2;
}

message GenAuthCaptchaReply{
  string id = 1;
  uint32 expire = 2;
  string base64 = 3;
}

message OAuthLoginRequest {
  string app = 1[(validate.rules).string = {min_len:1}];
  string code = 2[(validate.rules).string = {min_len:1}];
  string channel = 3[(validate.rules).string = {min_len:1}];
}

message OAuthLoginReply{
  bool isBind = 1;
  optional string oAuthUid = 2;
  optional string token = 3;
  optional uint32 expire = 4;
}

message EmailLoginRequest{
  string email = 1[(validate.rules).string = {email:true}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captchaId = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
}

message EmailLoginReply{
  string token = 1;
  uint32 expire = 2;
}

message PasswordLoginRequest {
  string username = 1[(validate.rules).string = {min_len:6,pattern:"^[a-zA-Z][a-zA-Z0-9_]{5,11}$"}];
  string password = 2[(validate.rules).string = {min_len:8}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captchaId = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
}

message PasswordLoginReply{
  string token = 1;
  uint32 expire = 2;
}

message EmailRegisterRequest{
  string email = 1[(validate.rules).string = {email:true}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captchaId = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
  optional string oAuthUid = 6;
}

message EmailRegisterReply{
  string token = 1;
  uint32 expire = 2;
}

message PasswordRegisterRequest {
  string username = 1[(validate.rules).string = {min_len:6}];
  string password = 2[(validate.rules).string = {min_len:1}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captchaId = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
  optional string oAuthUid = 6;
}

message PasswordRegisterReply{
  string token = 1;
  uint32 expire = 2;
}

message EmailBindRequest{
  string email = 1[(validate.rules).string = {email:true}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captchaId = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
  string oAuthUid = 6[(validate.rules).string = {min_len:1}];
}

message EmailBindReply{
  string token = 1;
  uint32 expire = 2;
}

message PasswordBindRequest {
  string username = 1[(validate.rules).string = {min_len:6}];
  string password = 2[(validate.rules).string = {min_len:1}];
  string captcha = 3[(validate.rules).string = {min_len:1}];
  string captchaId = 4[(validate.rules).string = {min_len:1}];
  string app = 5[(validate.rules).string = {min_len:1}];
  string oAuthUid = 6[(validate.rules).string = {min_len:1}];
}

message PasswordBindReply{
  string token = 1;
  uint32 expire = 2;
}

message RefreshTokenRequest{}

message RefreshTokenReply{
  string token = 1;
  uint32 expire = 2;
}

message LogoutRequest{}

message LogoutReply{}