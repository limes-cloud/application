syntax = "proto3";

package usercenter.api.usercenter.auth.v1;

option go_package = "./v1;v1";
option java_multiple_files = true;
option java_package = "usercenter.api.usercenter.auth.v1";
option java_outer_classname = "AuthV1";

import "api/usercenter/auth/usercenter_auth.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service Auth{

  // 刷新token时长
  rpc RefreshToken (RefreshTokenRequest)  returns (RefreshTokenReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/token/refresh",
    };
  }

  // 退出登陆
  rpc Logout (LogoutRequest)  returns (LogoutReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/logout",
    };
  }

  // 解析token信息
  rpc Auth (google.protobuf.Empty)  returns (AuthReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/auth",
      body: "*"
    };
  }

  // ListAuth 获取应用授权信息列表
  rpc ListAuth (ListAuthRequest) returns (ListAuthReply) {
    option (google.api.http) = {
      get: "/usercenter/api/v1/auths",
    };
  }

  // CreateAuth 创建应用授权信息
  rpc CreateAuth (CreateAuthRequest) returns (CreateAuthReply) {
    option (google.api.http) = {
      post: "/usercenter/api/v1/auth",
      body: "*"
    };
  }

  // UpdateAuthStatus 更新应用授权信息状态
  rpc UpdateAuthStatus (UpdateAuthStatusRequest) returns (UpdateAuthStatusReply) {
    option (google.api.http) = {
      put: "/usercenter/api/v1/auth/status",
      body: "*"
    };
  }

  // DeleteAuth 删除应用授权信息
  rpc DeleteAuth (DeleteAuthRequest) returns (DeleteAuthReply) {
    option (google.api.http) = {
      delete: "/usercenter/api/v1/auth",
    };
  }

  // ListOAuth 获取用户授权渠道信息列表
  rpc ListOAuth (ListOAuthRequest) returns (ListOAuthReply) {
    option (google.api.http) = {
      get: "/usercenter/api/v1/oauths",
    };
  }

  // DeleteOAuth 删除渠道授权信息
  rpc DeleteOAuth (DeleteOAuthRequest) returns (DeleteOAuthReply) {
    option (google.api.http) = {
      delete: "/usercenter/api/v1/oauth",
    };
  }

  // GenAuthCaptcha 生成二维码
  rpc GenAuthCaptcha (GenAuthCaptchaRequest) returns (GenAuthCaptchaReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/auth/captcha",
      body: "*"
    };
  }

  // OAuthLogin 三方渠道登陆
  rpc OAuthLogin (OAuthLoginRequest) returns (OAuthLoginReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/login/oauth",
      body: "*"
    };
  }

  // EmailLogin 邮箱登陆
  rpc EmailLogin (EmailLoginRequest) returns (EmailLoginReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/login/email",
      body: "*"
    };
  }

  // PasswordLogin 密码登陆
  rpc PasswordLogin (PasswordLoginRequest) returns (PasswordLoginReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/login/password",
      body: "*"
    };
  }

  // EmailRegister 邮箱注册
  rpc EmailRegister (EmailRegisterRequest) returns (EmailRegisterReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/register/email",
      body: "*"
    };
  }

  // PasswordRegister 密码注册
  rpc PasswordRegister (PasswordRegisterRequest) returns (PasswordRegisterReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/register/password",
      body: "*"
    };
  }

  // EmailBind 邮箱绑定
  rpc EmailBind (EmailBindRequest) returns (EmailBindReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/bind/email",
      body: "*"
    };
  }

  // PasswordBind 密码绑定
  rpc PasswordBind (PasswordBindRequest) returns (PasswordBindReply) {
    option (google.api.http) = {
      post: "/usercenter/client/v1/bind/password",
      body: "*"
    };
  }

}