# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: User API
    version: 0.0.1
paths:
    /usercenter/api/v1/user:
        get:
            tags:
                - User
            description: GetUser 获取指定的用户信息
            operationId: User_GetUser
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: phone
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - User
            description: UpdateUser 更新用户信息
            operationId: User_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - User
            description: CreateUser 创建用户信息
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - User
            description: DeleteUser 删除用户信息
            operationId: User_DeleteUser
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: integer
                        format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /usercenter/api/v1/user/export:
        post:
            tags:
                - User
            description: ExportUser 导出用户信息
            operationId: User_ExportUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExportUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExportUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /usercenter/api/v1/user/import:
        post:
            tags:
                - User
            description: ImportUser 导入用户信息
            operationId: User_ImportUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ImportUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ImportUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /usercenter/api/v1/user/status:
        put:
            tags:
                - User
            description: UpdateUserStatus 更新用户信息状态
            operationId: User_UpdateUserStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserStatusReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /usercenter/api/v1/user/trash:
        get:
            tags:
                - User
            description: GetTrashUser 查看指定用户信息回收站数据
            operationId: User_GetTrashUser
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTrashUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - User
            description: RevertTrashUser 还原用户信息
            operationId: User_RevertTrashUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RevertTrashUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevertTrashUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - User
            description: DeleteTrashUser 彻底删除用户信息
            operationId: User_DeleteTrashUser
            parameters:
                - name: ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: integer
                        format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTrashUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /usercenter/api/v1/user/trashes:
        get:
            tags:
                - User
            description: ListTrashUser 查看用户信息列表回收站数据
            operationId: User_ListTrashUser
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: order
                  in: query
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  schema:
                    type: string
                - name: phone
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
                - name: realName
                  in: query
                  schema:
                    type: string
                - name: gender
                  in: query
                  schema:
                    type: string
                - name: status
                  in: query
                  schema:
                    type: boolean
                - name: from
                  in: query
                  schema:
                    type: string
                - name: createdAts
                  in: query
                  schema:
                    type: array
                    items:
                        type: integer
                        format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTrashUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /usercenter/api/v1/users:
        get:
            tags:
                - User
            description: ListUser 获取用户信息列表
            operationId: User_ListUser
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: order
                  in: query
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  schema:
                    type: string
                - name: phone
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
                - name: realName
                  in: query
                  schema:
                    type: string
                - name: gender
                  in: query
                  schema:
                    type: string
                - name: status
                  in: query
                  schema:
                    type: boolean
                - name: from
                  in: query
                  schema:
                    type: string
                - name: createdAts
                  in: query
                  schema:
                    type: array
                    items:
                        type: integer
                        format: uint32
                - name: appId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /usercenter/client/v1/user:
        get:
            tags:
                - User
            description: GetUser 获取当前的用户信息
            operationId: User_GetCurrentUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCurrentUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - User
            description: UpdateCurrentUser 更新当前的用户信息
            operationId: User_UpdateCurrentUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCurrentUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateCurrentUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        CreateUserRequest:
            type: object
            properties:
                phone:
                    type: string
                email:
                    type: string
                realName:
                    type: string
                gender:
                    type: string
        DeleteTrashUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
        DeleteUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
        ExportUserReply:
            type: object
            properties:
                src:
                    type: string
        ExportUserRequest:
            type: object
            properties:
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                realName:
                    type: string
                gender:
                    type: string
                status:
                    type: boolean
                from:
                    type: string
                createdAts:
                    type: array
                    items:
                        type: integer
                        format: uint32
        GetCurrentUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                avatar:
                    type: string
                avatarUrl:
                    type: string
                gender:
                    type: string
        GetTrashUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
                status:
                    type: boolean
                disableDesc:
                    type: string
                from:
                    type: string
                fromDesc:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                deletedAt:
                    type: integer
                    format: uint32
        GetUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                avatar:
                    type: string
                avatarUrl:
                    type: string
                gender:
                    type: string
                status:
                    type: boolean
                disableDesc:
                    type: string
                from:
                    type: string
                fromDesc:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ImportUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
        ImportUserRequest:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateUserRequest'
        ListTrashUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListTrashUserReply_User'
        ListTrashUserReply_User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
                status:
                    type: boolean
                disableDesc:
                    type: string
                from:
                    type: string
                fromDesc:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                deletedAt:
                    type: integer
                    format: uint32
        ListUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListUserReply_User'
        ListUserReply_User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                avatar:
                    type: string
                avatarUrl:
                    type: string
                gender:
                    type: string
                status:
                    type: boolean
                disableDesc:
                    type: string
                from:
                    type: string
                fromDesc:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        RevertTrashUserReply:
            type: object
            properties: {}
        RevertTrashUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateCurrentUserReply:
            type: object
            properties: {}
        UpdateCurrentUserRequest:
            type: object
            properties:
                nickName:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
        UpdateUserReply:
            type: object
            properties: {}
        UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                phone:
                    type: string
                email:
                    type: string
                username:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                realName:
                    type: string
                avatar:
                    type: string
                gender:
                    type: string
                disableDesc:
                    type: string
        UpdateUserStatusReply:
            type: object
            properties: {}
        UpdateUserStatusRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                status:
                    type: boolean
                disableDesc:
                    type: string
tags:
    - name: User
