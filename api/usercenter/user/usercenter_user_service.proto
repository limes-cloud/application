syntax = "proto3";

package usercenter.api.usercenter.user.v1;

option go_package = "./v1;v1";
option java_multiple_files = true;
option java_package = "usercenter.api.usercenter.user.v1";
option java_outer_classname = "UserV1";

import "api/usercenter/user/usercenter_user.proto";
import "google/api/annotations.proto";

service User{

  // GetUser 获取当前的用户信息
  rpc GetCurrentUser (GetCurrentUserRequest) returns (GetCurrentUserReply) {
    option (google.api.http) = {
      get: "/usercenter/client/v1/user",
    };
  }

  // UpdateCurrentUser 更新当前的用户信息
  rpc UpdateCurrentUser (UpdateCurrentUserRequest) returns (UpdateCurrentUserReply) {
    option (google.api.http) = {
      put: "/usercenter/client/v1/user",
      body: "*"
    };
  }

  // GetUser 获取指定的用户信息
  rpc GetUser (GetUserRequest) returns (GetUserReply) {
    option (google.api.http) = {
      get: "/usercenter/api/v1/user",
    };
  }

  // ListUser 获取用户信息列表
  rpc ListUser (ListUserRequest) returns (ListUserReply) {
    option (google.api.http) = {
      get: "/usercenter/api/v1/users",
    };
  }

  // CreateUser 创建用户信息
  rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
    option (google.api.http) = {
      post: "/usercenter/api/v1/user",
      body: "*"
    };
  }

  // ImportUser 导入用户信息
  rpc ImportUser (ImportUserRequest) returns (ImportUserReply) {
    option (google.api.http) = {
      post: "/usercenter/api/v1/user/import",
      body: "*"
    };
  }

  // ExportUser 导出用户信息
  rpc ExportUser (ExportUserRequest) returns (ExportUserReply) {
    option (google.api.http) = {
      post: "/usercenter/api/v1/user/export",
      body: "*"
    };
  }

  // UpdateUser 更新用户信息
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
    option (google.api.http) = {
      put: "/usercenter/api/v1/user",
      body: "*"
    };
  }

  // UpdateUserStatus 更新用户信息状态
  rpc UpdateUserStatus (UpdateUserStatusRequest) returns (UpdateUserStatusReply) {
    option (google.api.http) = {
      put: "/usercenter/api/v1/user/status",
      body: "*"
    };
  }

  // DeleteUser 删除用户信息
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
    option (google.api.http) = {
      delete: "/usercenter/api/v1/user",
    };
  }

  // GetTrashUser 查看指定用户信息回收站数据
  rpc GetTrashUser (GetTrashUserRequest) returns (GetTrashUserReply) {
    option (google.api.http) = {
      get: "/usercenter/api/v1/user/trash",
    };
  }

  // ListTrashUser 查看用户信息列表回收站数据
  rpc ListTrashUser (ListTrashUserRequest) returns (ListTrashUserReply) {
    option (google.api.http) = {
      get: "/usercenter/api/v1/user/trashes",
    };
  }

  // DeleteTrashUser 彻底删除用户信息
  rpc DeleteTrashUser (DeleteTrashUserRequest) returns (DeleteTrashUserReply) {
    option (google.api.http) = {
      delete: "/usercenter/api/v1/user/trash",
    };
  }

  // RevertTrashUser 还原用户信息
  rpc RevertTrashUser (RevertTrashUserRequest) returns (RevertTrashUserReply) {
    option (google.api.http) = {
      put: "/usercenter/api/v1/user/trash",
      body: "*"
    };
  }

}